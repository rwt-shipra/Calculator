{"version":3,"sources":["components/Calculator/Calculator.module.scss","components/Calculator/Calculator.js","components/Display/Display.js","index.js"],"names":["module","exports","REGEX","Regex1","Calculator","props","findEventValue","e","key","String","match","numbersClickHandler","operationsClickHandler","calculateHandler","console","log","BackSpaceEventHandler","clearLastValueHandler","displayNumber","state","displaylength","length","tempDisplay","number","undefined","target","value","test","push","setState","maxDigitWarning","prevVal","setTimeout","clearButtonHandler","calCulatedValue","slice","modeClickHandler","parseFloat","join","outPut","Math","round","eval","opration","bind","window","addEventListener","this","removeEventListener","tempView","singleDecimal","className","calCss","wrapper","view","buttonDivs","clearStyle","onClick","id","modeStyle","operatorStyle","data-testid","inputButton","zeroButton","event","React","Component","Display","display","autoFocus","readOnly","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1c679ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Calculator_wrapper__1j3QK\",\"buttonDivs\":\"Calculator_buttonDivs__2JCvG\",\"operatorStyle\":\"Calculator_operatorStyle__1VUPr\",\"zeroButton\":\"Calculator_zeroButton__2Y6K0\",\"clearStyle\":\"Calculator_clearStyle__1k5u4\",\"modeStyle\":\"Calculator_modeStyle__1pZll\",\"display\":\"Calculator_display__10iZY\"};","import React, {useState }from \"react\";\nimport calCss from \"./Calculator.module.scss\";\nimport Display from \"../Display/Display\";\n\n   \n// this regex is used to do what\nconst REGEX = /[*/+-]/;\nconst Regex1 = /[?*/+]/;\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayNumber: [],\n      calCulatedValue: 0,\n      prevVal: 0,\n    };\n    this.opration = \"\";\n    this.operationsClickHandler = this.operationsClickHandler.bind(this);\n    this.calculateHandler = this.calculateHandler.bind(this);\n    this.maxDigitWarning = this.maxDigitWarning.bind(this);\n    this.numbersClickHandler = this.numbersClickHandler.bind(this);\n    this.clearButtonHandler = this.clearButtonHandler.bind(this);\n  }\n\n  findEventValue=(e)=>{\n    switch(e.key){\n      case String((e.key).match(/^\\d+$/)):\n        this.numbersClickHandler(e.key);\n        break;\n      case String((e.key).match(REGEX)):\n          this.operationsClickHandler(e.key);\n          break;\n      case \"=\":\n        this.calculateHandler();\n        break;\n      case \"Enter\":\n          this.calculateHandler();\n          break;\n      default:\n        console.log(\"You are in default section\")\n    }\n  }\n\n  BackSpaceEventHandler=(e)=>{\n      if(e.key === \"Backspace\"){this.clearLastValueHandler();}\n  }\n\n  componentDidMount(){\n    window.addEventListener(\"keypress\",this.findEventValue)\n    window.addEventListener(\"keydown\",this.BackSpaceEventHandler)\n  }\n  componentWillUnmount(){\n    window.removeEventListener(\"keypress\",this.findEventValue);\n    window.addEventListener(\"keydown\",this.BackSpaceEventHandler);\n  }\n  numbersClickHandler = (e) => {\n    let displayNumber = [...this.state.displayNumber];\n    let displaylength = displayNumber.length - 1;\n    let tempDisplay = displaylength >= 0 && displayNumber[displaylength];\n    let number = e.target ===undefined ?e : e.target.value;\n    if (tempDisplay.length < 9 || tempDisplay.length === undefined) {\n      displayNumber.length === 0 || REGEX.test(displayNumber[displaylength])\n        ? displayNumber.push(number)\n        : (displayNumber[displaylength] =\n            displayNumber[displaylength] + number);\n      this.setState({\n        displayNumber: displayNumber,\n      });\n    } else {\n      this.maxDigitWarning();\n    }\n  };\n  maxDigitWarning = () => {\n    this.setState({\n      prevVal: this.state.displayNumber,\n      displayNumber: \"Digit limit\",\n    });\n    setTimeout(() => {\n      this.setState({\n        displayNumber: this.state.prevVal,\n      });\n    }, 1000);\n  };\n\n  clearButtonHandler = () => {\n    \n    this.setState({ displayNumber: [], calCulatedValue: 0 });\n  };\n  clearLastValueHandler=()=>{\n    let displayNumber = [...this.state.displayNumber];\n    displayNumber = displayNumber.slice(0,-1);\n    this.setState({ displayNumber:displayNumber});\n  }\n  operationsClickHandler = (number) => {\n    let { calCulatedValue } = this.state;\n    let displayNumber = [...this.state.displayNumber];\n    let displaylength = displayNumber.length - 1;\n    if (!REGEX.test(displayNumber[displaylength])) {\n      displayNumber.push(number);\n    } else if (Regex1.test(displayNumber[displaylength])) {\n      number === \"-\"\n        ? (displayNumber[displaylength] += number)\n        : (displayNumber[displaylength] = number);\n    } else if (displayNumber[displaylength] === \"-\") {\n      displayNumber = displayNumber.slice(0, displaylength);\n      displayNumber.push(number);\n    } else {\n      displayNumber[displaylength] = number;\n    }\n    this.setState({\n      displayNumber: displayNumber,\n      calCulatedValue: calCulatedValue,\n    });\n  };\n  modeClickHandler=()=>{\n    let displayNumber = [...this.state.displayNumber];\n    displayNumber = parseFloat(displayNumber.join(\"\")) / 100;\n    this.setState({\n        displayNumber: displayNumber,\n      });\n  }\n\n  calculateHandler = () => {\n    let outPut = 0;\n    let displayNumber = [...this.state.displayNumber];\n    let displaylength = displayNumber.length - 1;\n    displayNumber = REGEX.test(displayNumber[displaylength])\n      ? displayNumber.slice(0, -1)\n      : displayNumber;\n    outPut =\n      Math.round(1000000000000 * eval(displayNumber.join(\"\"))) / 1000000000000;\n    // outPut=outPut.toLocaleString('en-IN',{maximumSignificantDigits:3})\n    displayNumber = [];\n    displayNumber.push(outPut);\n    this.setState({ displayNumber: displayNumber });\n  };\n  render() {\n    const { displayNumber } = this.state;\n    let tempView =\n      typeof displayNumber === \"object\"\n        ? displayNumber.length === 0\n          ? 0\n          : displayNumber.join(\"\")\n        : displayNumber;\n\n    let singleDecimal = /[.]/.test(displayNumber[displayNumber.length - 1]);\n    return (\n      <div className={calCss.wrapper}>\n          <Display  view={tempView}>\n          </Display>\n        <div className={calCss.buttonDivs}>\n          <div>\n            <button\n              className={calCss.clearStyle}\n              onClick={() =>\n                displayNumber.length !== 0 && this.clearButtonHandler()\n              }\n              id=\"clear\"\n            >\n              AC\n            </button>\n            <button\n              className={calCss.clearStyle}\n              onClick={() =>\n                displayNumber.length !== 0 && this.clearLastValueHandler()\n              }\n              id=\"clearLastValue\"\n            >\n              C\n            </button>\n            <button\n              className={calCss.modeStyle}\n              onClick={() =>\n                displayNumber.length !== 0 && this.modeClickHandler()\n              }\n              id=\"mode\"\n            >\n            %\n            </button>\n            <button\n              className={calCss.operatorStyle}\n              onClick={() =>\n                displayNumber.length !== 0 && this.operationsClickHandler(\"/\")\n              }\n              id=\"divide\"\n              data-testid=\"divide\"\n            >\n              &#xf7;\n            </button>\n            \n          </div>\n          <div>\n            <button\n              className={calCss.inputButton}\n              onClick={this.numbersClickHandler}\n              value=\"7\"\n              id=\"seven\"\n            >\n              7\n            </button>\n            <button\n              className={calCss.inputButton}\n              onClick={this.numbersClickHandler}\n              value=\"8\"\n              id=\"eight\"\n            >\n              8\n            </button>\n            <button\n              className={calCss.inputButton}\n              onClick={this.numbersClickHandler}\n              value=\"9\"\n              id=\"nine\"\n            >\n              9\n            </button>\n            <button\n              className={calCss.operatorStyle}\n              onClick={() =>\n                displayNumber.length !== 0 && this.operationsClickHandler(\"*\")\n              }\n              id=\"multiply\"\n            >\n             x\n            </button>\n            \n          </div>\n          <div>\n            <button\n              className={calCss.inputButton}\n              onClick={this.numbersClickHandler}\n              value=\"4\"\n              id=\"four\"\n            >\n              4\n            </button>\n            <button\n              className={calCss.inputButton}\n              onClick={this.numbersClickHandler}\n              value=\"5\"\n              id=\"five\"\n            >\n              5\n            </button>\n            <button\n              className={calCss.inputButton}\n              onClick={this.numbersClickHandler}\n              value=\"6\"\n              id=\"six\"\n            >\n              6\n            </button>\n            <button\n              className={calCss.operatorStyle}\n              onClick={() =>\n                displayNumber.length !== 0 && this.operationsClickHandler(\"+\")\n              }\n              id=\"add\"\n            >\n              +\n            </button>\n          </div>\n          <div>\n            <button\n              className={calCss.inputButton}\n              onClick={this.numbersClickHandler}\n              value=\"1\"\n              id=\"one\"\n            >\n              1\n            </button>\n            <button\n              className={calCss.inputButton}\n              onClick={this.numbersClickHandler}\n              value=\"2\"\n              id=\"two\"\n            >\n              2\n            </button>\n            <button\n              className={calCss.inputButton}\n              onClick={this.numbersClickHandler}\n              value=\"3\"\n              id=\"three\"\n            >\n              3\n            </button>\n            <button\n              className={calCss.operatorStyle}\n              onClick={() =>\n                displayNumber.length !== 0 && this.operationsClickHandler(\"-\")\n              }\n              id=\"subtract\"\n            >\n              -\n            </button>\n          </div>\n          <div>\n            <button\n              className={calCss.zeroButton}\n              onClick={(event) => {\n                displayNumber.length !== 0 && this.numbersClickHandler(event);\n              }}\n              value=\"0\"\n              id=\"zero\"\n            >\n              0\n            </button>\n            <button\n            className={calCss.inputButton}\n              onClick={() =>\n                displayNumber.length !== 0 && singleDecimal === false\n                  ? this.operationsClickHandler(\".\")\n                  : \"\"\n              }\n              id=\"decimal\"\n            >\n              .\n            </button>\n            <button\n              onClick={displayNumber.length !== 0 ? this.calculateHandler : undefined}\n              id=\"equals\"\n              className={calCss.operatorStyle}\n            >\n              =\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n","\nimport React from 'react';\nimport calCss from \"../Calculator/Calculator.module.scss\";\nexport default class Display extends React.Component{\n   \n    render(){\n        return(\n            <input  className={calCss.display} id=\"display\" autoFocus={true} data-testid=\"display\"  value={this.props.view} readOnly/>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './components/Calculator/Calculator';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Calculator />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}